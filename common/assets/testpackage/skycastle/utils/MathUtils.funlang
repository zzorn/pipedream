
module MathUtils {

    fun lerp(a, b, t) = a * (1 - t) + b * t
    fun lerpVec2(a: Vec2, b: Vec2, t)  = a * (1 - t) + b * t
    fun lerpVec3(a: Vec3, b: Vec3, t)  = a * (1 - t) + b * t

    fun foo(p: Any): Bool = false
    fun boolFunc(): Bool = true

    val x = y
    val y = 3

    module Inner {
        val z = x
    }

    fun testFun(p = 3): Any = 3 + 4
    val testVal = 2

    fun many(f: Any -> Any) {
       return [f(1), f(23.324), f(3)]
    }

/*
    fun fibbo(x) =
        x == 0 -> 1
        x == 1 -> 1
        else fibbo(x - 2) + fibbo(x - 1)
*/

}